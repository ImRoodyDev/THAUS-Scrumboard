import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.*;
import java.util.HashMap;

public class ChatBox extends JFrame {
    private JTextArea chatArea;
    private JTextField inputField;
    private JLabel chatPartnerLabel;
    private DefaultListModel<String> chatListModel;
    private JList<String> chatList;
    private HashMap<String, StringBuilder> chatHistory;
    private static final String FILE_NAME = "chats.txt";

    public ChatBox() {
        setTitle("TeamFlow Chat");
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);

        chatHistory = new HashMap<>();

        // Chatbox (JTextArea) met scrollpaneel
        chatArea = new JTextArea();
        chatArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(chatArea);
        scrollPane.setBounds(10, 10, 350, 300);
        add(scrollPane);

        // Invoerveld voor berichten
        inputField = new JTextField();
        inputField.setBounds(10, 320, 250, 30);
        add(inputField);

        JButton sendButton = new JButton("Verzenden");
        sendButton.setBounds(270, 320, 100, 30);
        add(sendButton);

        sendButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String bericht = inputField.getText();
                String gesprekspartner = chatList.getSelectedValue();

                if (!bericht.isEmpty() && gesprekspartner != null) {
                    chatHistory.putIfAbsent(gesprekspartner, new StringBuilder());
                    chatHistory.get(gesprekspartner).append("Jij: ").append(bericht).append("\n");
                    chatArea.append("Jij: " + bericht + "\n");
                    inputField.setText("");

                    saveChatHistory();
                }
            }
        });

        inputField.addActionListener(e -> sendButton.doClick());

        chatPartnerLabel = new JLabel("U spreekt met: Niemand");
        chatPartnerLabel.setBounds(10, 360, 200, 30);
        add(chatPartnerLabel);

        // ❗ FIXED: Initialize chatListModel BEFORE loading history
        chatListModel = new DefaultListModel<>();
        chatList = new JList<>(chatListModel);
        chatList.setBounds(370, 10, 100, 340);
        add(chatList);

        // Load saved chat history
        loadChatHistory();

        chatList.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                String geselecteerdeGebruiker = chatList.getSelectedValue();
                if (geselecteerdeGebruiker != null) {
                    chatPartnerLabel.setText("U spreekt met: " + geselecteerdeGebruiker);
                    chatArea.setText(chatHistory.getOrDefault(geselecteerdeGebruiker, new StringBuilder()).toString());
                }
            }
        });

        JTextField newUserField = new JTextField();
        newUserField.setBounds(370, 360, 100, 30);
        add(newUserField);

        JButton addUserButton = new JButton("Toevoegen");
        addUserButton.setBounds(370, 400, 100, 30);
        add(addUserButton);

        addUserButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String nieuweGebruiker = newUserField.getText().trim();
                if (!nieuweGebruiker.isEmpty() && !chatListModel.contains(nieuweGebruiker)) {
                    chatListModel.addElement(nieuweGebruiker);
                    chatHistory.put(nieuweGebruiker, new StringBuilder());
                    newUserField.setText("");

                    saveChatHistory();
                }
            }
        });
    }

    private void saveChatHistory() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {
            for (String gebruiker : chatHistory.keySet()) {
                writer.write("===" + gebruiker + "===\n");
                writer.write(chatHistory.get(gebruiker).toString());
                writer.write("\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void loadChatHistory() {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            String huidigeGebruiker = null;
            StringBuilder gesprekken = new StringBuilder();

            while ((line = reader.readLine()) != null) {
                if (line.startsWith("===") && line.endsWith("===")) {
                    if (huidigeGebruiker != null) {
                        chatHistory.put(huidigeGebruiker, new StringBuilder(gesprekken));
                    }
                    huidigeGebruiker = line.substring(3, line.length() - 3);
                    chatListModel.addElement(huidigeGebruiker); // ✅ Fix: chatListModel is now initialized
                    gesprekken = new StringBuilder();
                } else {
                    gesprekken.append(line).append("\n");
                }
            }
            if (huidigeGebruiker != null) {
                chatHistory.put(huidigeGebruiker, gesprekken);
            }
        } catch (IOException e) {
            System.out.println("Geen eerdere gesprekken gevonden, nieuw bestand wordt aangemaakt.");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new ChatBox().setVisible(true));
    }
}

